/* eslint-disable no-shadow */
export namespace EnUSEx {
  export namespace Common {
    export enum Table {
      prev = 'Prev',
      next = 'Next',
      goTo = 'GoTo',
      goToView = 'GoToView',
    }

    export enum Action {
      add = 'Add',
      append = 'Append',
      edit = 'Edit',
      remove = 'Remove',
      confirmRemove = 'Confirm Remove',
      view = 'View',
      ok = 'Ok',
      cancel = 'Cancel',
      save = 'Save',
      options = 'Options',
      submit = 'Submit',
      import = 'Import',
      export = 'Export',
      optional = 'Optional',
      goBack = 'GoBack',
    }

    export enum System {
      parseConfigFailed = 'Configure formatting failed',
      empty = 'empty'
    }
  }

  export enum Geo {
    GB = 'GB',
    BJ = 'BJ',
    TJ = 'TJ',
    SH = 'SH',
    CQ = 'CQ',
    HEB = 'HEB',
    SX = 'SX',
    LN = 'LN',
    JL = 'JL',
    HLJ = 'HLJ',
    JS = 'JS',
    ZJ = 'ZJ',
    AH = 'AH',
    FJ = 'FJ',
    JX = 'JX',
    SD = 'SD',
    HEN = 'HEN',
    HUB = 'HUB',
    HUN = 'HUN',
    GD = 'GD',
    HAN = 'HAN',
    SC = 'SC',
    GZ = 'GZ',
    YN = 'YN',
    SNX = 'SNX',
    GS = 'GS',
    QH = 'QH',
    TW = 'TW',
    NM = 'NM',
    GX = 'GX',
    XZ = 'XZ',
    NX = 'NX',
    XJ = 'XJ',
    XG = 'XG',
    AM = 'AM',
    ZDY = 'ZDY',
  }

  export enum Industry {
    SY = 'SY',
    GL = 'GL',
    QL = 'QL',
    TL = 'TL',
    ZDY = 'ZDY',
  }

  export enum Engineering {
    searchPlaceHolder = 'Please input the Name',
    optionsFn = 'optionsFn',
    changeJBSType = 'ChangeJBSType',
    choseJBSType = 'ChoseJBSType',
    JBSTypeRequired = 'JBSTypeRequired',
    listConfig = 'listConfig',
    title = 'Title',
    unit = 'Unit',
    code = 'Code',
    name = 'Name',
    status = 'Status',
    type = 'Type',
    codeType = 'CodeType',
    templateConfig = 'TemplateConfig',
    oneKeyImport = 'OneKeyImport',
    tableImport = 'Please select the import type',
    globalImport = 'GlobalImport',
    deltaImport = 'DeltaImport',
    templateExport = 'TemplateExport',
    globalTemplateExport = 'globalTemplateExport',
    deltaTemplateExport = 'deltaTemplateExport',
    addChild = 'AddChild',
    addTemplate = 'AddTemplate',
    modalTitle = 'ModalTitle',
    engineeringParts = 'EngineeringParts',
    engineeringPartsRequired = 'engineeringPartsRequired',
    correspondingCode = 'CorrespondingCode',
    correspondingCodeRequired = 'correspondingCodeRequired',
    dividedCategories = 'DividedCategories',
    dividedCategoriesRequired = 'dividedCategoriesRequired',
    associationMBS = 'AssociationMBS',
    associationMBSRequired = 'AssociationMBSRequired',
    associationJBS = 'AssociationJBS',
    associationJBSRequired = 'AssociationJBSRequired',
    fileName = 'FileName',
    prepareDate = 'PrepareDate',
    preparer = 'Preparer',
    currentWorkflow = 'CurrentWorkflow',
    filingDate = 'FilingDate',
    view = 'View',
    qbsTree = 'QBSTree',
    qualityDB = 'QualityDataBase',
    fileDB = 'FileDataBase',
    UNIT_PROJECT = 'UNIT_PROJECT',
    PARTITION_PROJECT = 'PARTITION_PROJECT',
    SUB_PARTITION_PROJECT = 'SUB_PARTITION_PROJECT',
    ITEM_PROJECT = 'ITEM_PROJECT',
    SUB_ITEM_PROJECT = 'SUB_ITEM_PROJECT',
    INSPECTION_LOT = 'INSPECTION_LOT',
    MODEL = 'MODEL',
    CHECK_POINT = 'CHECK_POINT',
    CHECK_STEP = 'CHECK_STEP',

    projectCategory = 'Project Category',
    structureCategory = 'Structure Category',
    structureCategoryRequired = 'Structure Category Required',
    processCategory = 'Process Category',
    processCategoryRequired = 'Process Category Required',

    qbsCode = 'QBS Code',
    taskName = 'Task Name',
    taskNameRequired = 'Task Name Required',
    mbsCode = 'MBS Code',
    mount = 'Mount',
    confirmMount = 'Confirm Mount',
    relevance = 'Relevance',
    confirmRelevance = 'Confirm Relevance',
    qbsImport = 'Import',
    qbsImportTitle = 'Import Data',
    qbsExport = 'Export',
    qbsImportTips = 'To ensure that the uploaded data matches the list contents,',
    qbsImportDownloadTemplate = 'Download the template file first',
    qbsImportLocal = 'Uploading a Local File',
    qbsImportFileInput = 'Click or drag to upload',
    qbsRemove = 'Be sure to delete this QBS node？',
    qbsRemoveDescriptions = 'If any child node exists, it will be deleted along with the child node',
    editTitle = 'Edit the Data',
    addTitle = 'Add the Data',
    baseInfo = 'BaseInfo',
    inspectionLot = 'InspectionLotInfo',
    isInspectionLot = 'IsInspectionLot',
    qbsHasJbsTips = 'The current selected QBS item is bound to JBS code',
    qbsHasntJbsTips = 'Currently selected QBS is not bound to JBS code',
    editJBSBindShip = 'Edit JBS options',
    allOptionsRequired = 'All Options Required',
    batchFill = 'Batch Fill',
    batchFillTypeError = 'Record are not of the same type',

    stateless = 'stateless',
    undo = 'undo',
    doing = 'doing',
    done = 'done',

    addSync = 'addSync',
    mySheet = 'my Sheet',
    sheetLibrary = 'Sheet Library',
    syncNodeRequired = 'Sync Node Required',
    fileRequired = 'Upload File Required!',
    syncing = 'Sheet Syncing...',
    syncSuccess = 'Sheet Sync Success!',
    syncFail = 'Sheet Sync Fail!',

    QualityInspection = 'Quality Inspection',
    QINumberStatistical = 'QI Number Statistical',
    QIStatusStatistical = 'QI Status Statistical',
    QIWorkStatistical = 'QI Work Statistical',
    QIDoneNumberStatistical = 'QI Done Number Statistical',
    Parts = 'Parts',
    FormTotal = 'Form Total',
    FormUndo = 'Form Undo',
    FormDoing = 'Form Doing',
    FormDone = 'Form Done',
    ProgressDone = 'Progress Done',
    DateLatitude = 'Date Latitude',
    DateRange = 'Date Range',
    To = 'To',
    AcceptanceOfToday = 'Acceptance Of Today',
    AcceptanceNumber = 'Acceptance Number',
    AcceptanceTotal = 'Acceptance Total',
    AcceptanceReady = 'Acceptance Ready',
    NumberOfPending = 'Number Of Pending',
    Number = 'Number',
    ModelName = 'Model Name',
    QBSNodeSelectedRequired = 'QBSNode Selected Required',
    EmptyMBSNode = 'No node meets the requirements',
    OnlyOneMBSNode = 'Only one node can be associated',

    HasRelevance = 'Has Relevance',
    NoRelevance = 'No Relevance',

    CurrentPosition = 'Current Position',
    Accessory = 'Accessory',
    JBSNodeSelectedRequired = 'JBSNodeSelectedRequired',
  }

  export enum Progress {
    FillTitle = 'FillTitle',
    ProgressCodeTree = 'ProgressCodeTree',
    EngineeringParts = 'EngineeringParts',
    Status = 'Status',
    SearchPlaceholder = 'SearchPlaceholder',
    All = 'All',
    OnGoing = 'OnGoing',
    NotStarted = 'NotStarted',
    Done = 'Done',
    NotFinished = 'NotFinished',
    OneKeyDone = 'OneKeyDone',
    BatchFill = 'BatchFill',
    BatchFillSummary = 'BatchFillSummary',
    FillQuestTodoList = 'FillQuestTodoList',
    FillDetail = 'FillDetail',
    FillRecord = 'FillRecord',
    BaseInfo = 'BaseInfo',
    QuestName = 'QuestName',
    AccumulateProportion = 'AccumulateProportion',
    UnitPrice = 'UnitPrice',
    PlanNumber = 'PlanNumber',
    PlanProduction = 'PlanProduction',
    ResidualValue = 'ResidualValue',
    CompleteNumber = 'CompleteNumber',
    CompleteProduction = 'CompleteProduction',
    ResidualProduction = 'ResidualProduction',
    FillContent = 'FillContent',
    Filler = 'Filler',
    FillDate = 'FillDate',
    FillCalendar = 'FillCalendar',
    FillDepartment = 'FillDepartment',
    FillProduction = 'FillProduction',
    FillAllProduction = 'FillAllProduction',
    FillPercent = 'FillPercent',
    FillWorkDetail = 'FillWorkDetail',
    TaskNumber = 'TaskNumber',
    TaskName = 'TaskName',
    ProductionUnit = 'RMB',
    IdsRequired = 'IdsRequired！',
    DateRequired = 'DateRequired！',
    ProductionRequired = 'ProductionRequired！',
    RecordDate = 'RecordDate',
    RecordOperator = 'RecordOperator',
    RecordPercent = 'RecordPercent',
    //Log
    Log = 'Log',
    LogSummary = 'LogSummary',
    NewFillRecord = 'NewFillRecord',
    DataEdit = 'DataEdit',
    DataEditLabel = 'DataEditLabel',
    PercentRequired = 'PercentRequired！',
    docName = 'docName'
  }

  export enum BIMModelFill {
    Title = 'BIM Model Fill',
    AddToList = 'Add To List',
    ModelOperation = 'Model Operation',
    ModelList = 'Model List',
    ModelHighLight = 'Model HighLight',
    MyList = 'My List',
    Empty = 'Empty',
    Save = 'Save',

    Cancel = 'Cancel',
    Progress = 'Progress',
    ProgressFill = 'ProgressFill',
    ProgressFillAside = 'Fill in the data of construction progress of selected components',
    Quality = 'Quality',
    QualityInspection = 'Quality Inspection',
    QualityInspectionAside = 'Fill in the problems found in quality inspection of selected components',
    QualityFillAside = 'Fill in the materials related to quality inspection and acceptance of selected components',
    Measure = 'Measure',
    MeasureSecTitle = 'Middle Measurement',
    MeasureAside = 'Fill in the data of progress measurement completion of the selected component',
    Security = 'Security',
    SecurityCheck = 'Security Check',
    SecurityCheckAside = 'Fill in the questions about the safety inspection of the selected component',
    BizFil = 'BizFil',
    InputListName = 'please input List Name',
    WaitToLoadForm = 'please wait to load form',
    noneProgressData = 'none progress data',
    nonePaymentData = 'none payment data',
    NoMBSIds = 'No MBS node added to the manifest',
    ConfirmDeleteList = 'Confirm Delete List Item?'
  }
}
